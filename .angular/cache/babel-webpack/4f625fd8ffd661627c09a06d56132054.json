{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError, map, startWith } from 'rxjs/operators';\nimport { DataStateEnum, ProductActionsTypes } from '../../State/product.state';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/products.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./product-nav-bar/product-nav-bar.component\";\nimport * as i4 from \"./product-list/product-list.component\";\nexport let ProductsComponent = /*#__PURE__*/(() => {\n  class ProductsComponent {\n    constructor(productService, router) {\n      this.productService = productService;\n      this.router = router;\n      this.productsAncien = null;\n      this.productsbeforePipe$ = null;\n      this.products$ = null;\n      this.DataStateEnum = DataStateEnum;\n    }\n\n    ngOnInit() {} // tslint:disable-next-line:typedef\n\n\n    onGetAllProductsAncien() {\n      this.productService.getAllProducts().subscribe(data => {\n        this.productsAncien = data;\n      }, error => console.log(error));\n    } // tslint:disable-next-line:typedef\n\n\n    onGetAllProductsBeforePipe() {\n      this.productsbeforePipe$ = this.productService.getAllProducts();\n    } // tslint:disable-next-line:typedef\n\n\n    onGetAllProducts() {\n      // @ts-ignore\n      this.products$ = this.productService.getAllProducts().pipe(map(data => {\n        return {\n          dataState: DataStateEnum.LOADED,\n          data\n        };\n      }), startWith({\n        dataState: DataStateEnum.LOADING\n      }), catchError(err => of({\n        dataState: DataStateEnum.ERROR,\n        errorMessage: err.message\n      })));\n    } // tslint:disable-next-line:typedef\n\n\n    onGetSelectedProducts() {\n      // @ts-ignore\n      this.products$ = this.productService.getSelectedProducts().pipe(map(data => {\n        return {\n          dataState: DataStateEnum.LOADED,\n          data\n        };\n      }), startWith({\n        dataState: DataStateEnum.LOADING\n      }), catchError(err => of({\n        dataState: DataStateEnum.ERROR,\n        errorMessage: err.message\n      })));\n    } // tslint:disable-next-line:typedef\n\n\n    onGetAvailableProducts() {\n      // @ts-ignore\n      this.products$ = this.productService.getAvailableProducts().pipe(map(data => {\n        return {\n          dataState: DataStateEnum.LOADED,\n          data\n        };\n      }), startWith({\n        dataState: DataStateEnum.LOADING\n      }), catchError(err => of({\n        dataState: DataStateEnum.ERROR,\n        errorMessage: err.message\n      })));\n    } // tslint:disable-next-line:typedef\n\n\n    onSearch(dataForm) {\n      // @ts-ignore\n      this.products$ = this.productService.getResearchProducts(dataForm.keyword).pipe(map(data => {\n        console.log(dataForm.keyword);\n        console.log(data);\n        return {\n          dataState: DataStateEnum.LOADED,\n          data\n        };\n      }), startWith({\n        dataState: DataStateEnum.LOADING\n      }), catchError(err => of({\n        dataState: DataStateEnum.ERROR,\n        errorMessage: err.message\n      })));\n    } // tslint:disable-next-line:typedef\n\n\n    onSelect(p) {\n      this.productService.selectOrUnSelectProduct(p).subscribe(data => {\n        p.selected = data.selected;\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    onDelete(p) {\n      const valider = confirm('Etes vous sûr de vouloir supprimer');\n\n      if (valider) {\n        this.productService.deleteProduct(p).subscribe(data => {\n          this.onGetAllProducts();\n        });\n      }\n    } // tslint:disable-next-line:typedef\n\n\n    onUpdate(p) {\n      this.productService.updateProduct(p).subscribe(data => {\n        this.onGetAllProducts();\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    onNewProducts() {\n      this.router.navigateByUrl('/newProduct');\n    } // tslint:disable-next-line:typedef\n\n\n    onEdit(p) {\n      this.router.navigateByUrl('/editProduct/' + p.id);\n    } // tslint:disable-next-line:typedef\n\n\n    onActionEvent($event) {\n      console.log($event.type);\n\n      switch ($event.type) {\n        case ProductActionsTypes.GET_ALL_PRODUCTS:\n          this.onGetAllProducts();\n          break;\n\n        case ProductActionsTypes.GET_AVAILABLE_PRODUCTS:\n          this.onGetAvailableProducts();\n          break;\n\n        case ProductActionsTypes.GET_SELECTED_PRODUCTS:\n          this.onGetSelectedProducts();\n          break;\n\n        case ProductActionsTypes.SEARCH_PRODUCTS:\n          this.onSearch($event.payload);\n          break;\n\n        case ProductActionsTypes.NEW_PRODUCTS:\n          this.onNewProducts();\n          break;\n      }\n    } // tslint:disable-next-line:typedef\n\n\n    onActionListEvent($event) {\n      switch ($event.type) {\n        case ProductActionsTypes.EDIT_PRODUCTS:\n          this.onEdit();\n          break;\n\n        case ProductActionsTypes.GET_AVAILABLE_PRODUCTS:\n          this.onGetAvailableProducts();\n          break;\n\n        case ProductActionsTypes.GET_SELECTED_PRODUCTS:\n          this.onGetSelectedProducts();\n          break;\n\n        case ProductActionsTypes.SEARCH_PRODUCTS:\n          this.onSearch($event.payload);\n          break;\n\n        case ProductActionsTypes.NEW_PRODUCTS:\n          this.onNewProducts();\n          break;\n      }\n    }\n\n  }\n\n  ProductsComponent.ɵfac = function ProductsComponent_Factory(t) {\n    return new (t || ProductsComponent)(i0.ɵɵdirectiveInject(i1.ProductsService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  ProductsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductsComponent,\n    selectors: [[\"app-products\"]],\n    outputs: {\n      products$: \"products$\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[3, \"productEvenEmitter\"], [3, \"productsInput$\", \"productEventEmitter\"]],\n    template: function ProductsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-product-nav-bar\", 0);\n        i0.ɵɵlistener(\"productEvenEmitter\", function ProductsComponent_Template_app_product_nav_bar_productEvenEmitter_0_listener($event) {\n          return ctx.onActionEvent($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"app-product-list\", 1);\n        i0.ɵɵlistener(\"productEventEmitter\", function ProductsComponent_Template_app_product_list_productEventEmitter_1_listener($event) {\n          return ctx.onActionListEvent($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"productsInput$\", ctx.products$);\n      }\n    },\n    directives: [i3.ProductNavBarComponent, i4.ProductListComponent],\n    styles: [\"\"]\n  });\n  return ProductsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}